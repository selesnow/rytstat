[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alexey Seleznev. Author, maintainer. Netpeak. Copyright holder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Seleznev (2021). rytstat: Work 'YouTube API'. R package version 0.2.1.9000, https://selesnow.github.io/rytstat/docs/.","code":"@Manual{,   title = {rytstat: Work with 'YouTube API'},   author = {Alexey Seleznev},   year = {2021},   note = {R package version 0.2.1.9000},   url = {https://selesnow.github.io/rytstat/docs/}, }"},{"path":"/index.html","id":"rytstat---r-interface-for-work-with-youtube-apis-","dir":"","previous_headings":"","what":"Work with YouTube API","title":"Work with YouTube API","text":"rytstat package R interface working following YouTube APIs: YouTube Reporting API YouTube Analytics API YouTube Data API , rytstat allows request data available YouTube Creator Studio analysis visualization using R language.","code":""},{"path":"/index.html","id":"privacy-policy","dir":"","previous_headings":"","what":"Privacy Policy","title":"Work with YouTube API","text":"rytstat package authorization uses gargle package, credentials obtained authorization stored exclusively local PC, can find folder credentials cached using ryt_auth_cache_path() function. loading data YouTube channel rytstat needs next scopes: View monetary non-monetary YouTube Analytics reports YouTube content View YouTube account View manage assets associated content YouTube View YouTube Analytics reports YouTube content Manage YouTube account details see Official YouTube API documentation. package transfer credentials data obtained advertising accounts third parties, however, responsibility information leakage remains side package user. author bear responsibility safety, careful transferring cached credentials third parties. details, recommend read following articles official documentation gargle package: Stewarding cache user tokens Auth using R browser gargle gets tokens","code":""},{"path":"/index.html","id":"authorization-process","dir":"","previous_headings":"Privacy Policy","what":"Authorization process","title":"Work with YouTube API","text":"run gads_auth('@gmail.com') start OAuth Dance browser: Typical OAuth dance browser, initiated within R Upon success, see message browser: Authentication complete. Please close page return R. credentials cached locally PC form RDS files.","code":""},{"path":"/index.html","id":"key-points","dir":"","previous_headings":"Privacy Policy","what":"Key points","title":"Work with YouTube API","text":"default, gargle caches user tokens centrally, user level, keys labels also convey Google identity associated token. Token storage relies serialized R objects. , tokens stored locally PC form RDS files.","code":""},{"path":"/index.html","id":"use-own-oauth-client","dir":"","previous_headings":"Privacy Policy","what":"Use own OAuth client","title":"Work with YouTube API","text":"can use OAuth app:","code":"app <- httr::oauth_app(appname = \"app name\", key = \"app id\", secret = \"app secret\") ryt_auth_configure(app = app)  # or from json file  ryt_auth_configure(path = 'D:/ga_auth/app.json')  # run authorization ryt_auth('me@gmail.com')"},{"path":"/index.html","id":"install","dir":"","previous_headings":"","what":"Install","title":"Work with YouTube API","text":"can instal rytstat CRAN GitHub: или GitHub:","code":"install.packages(\"rytstat\") devtools::install_github('selesnow/rytstat')"},{"path":[]},{"path":"/index.html","id":"auth","dir":"","previous_headings":"Examples","what":"Auth","title":"Work with YouTube API","text":"","code":"library(rytstat) library(httr)  # auth app app <- oauth_app(     appname = 'my app',     key = 'app id',      secret = 'app secret')  ryt_auth_configure(app = app)  ryt_auth(email = 'me@gmail.com')  # load videos videos <- ryt_get_video_list()"},{"path":"/index.html","id":"using-youtube-analytics-api","dir":"","previous_headings":"","what":"Using YouTube Analytics API","title":"Work with YouTube API","text":"","code":"library(rytstat)  # get list of videos videos <- ryt_get_video_list()  # get statistics by day and videos # you can specify no more than 500 videos at a time video_stat <- ryt_get_analytics(   start_date = '2021-01-01',    end_date = '2021-09-01',   dimensions = c('day', 'video'),   metrics = c('views',                'likes',                'dislikes',                'comments',                'shares'),   filters = str_glue('video=={str_c(head(videos$id_video_id, 500), collapse=\",\")}') )"},{"path":"/index.html","id":"using-youtube-reporting-api","dir":"","previous_headings":"","what":"Using YouTube Reporting API","title":"Work with YouTube API","text":"","code":"# auth ryt_auth('me@gmail.com')  # get reporting data ## create job ryt_reports_create_job('channel_basic_a2')  ## get job list jobs2 <- ryt_get_job_list()  ## get job report list reports <- ryt_get_report_list(   job_id = jobs$id[1],   created_after = '2021-10-20T15:01:23.045678Z' )  # get report data data <- ryt_get_report(   download_url = reports$downloadUrl[1] )  # delete job ryt_delete_job(jobs$id[1])"},{"path":"/index.html","id":"author","dir":"","previous_headings":"","what":"Author","title":"Work with YouTube API","text":"Alexey Seleznev, Head analytics dept. Netpeak Telegram Channel: R4marketing YouTube Channel: R4marketing email: selesnow@gmail.com facebook: facebook.com/selesnow blog: alexeyseleznev.wordpress.com","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 ryoutube authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/privacy_policy.html","id":"authorization-process","dir":"","previous_headings":"","what":"Authorization process","title":"NA","text":"run gads_auth('@gmail.com') start OAuth Dance browser: Typical OAuth dance browser, initiated within R Upon success, see message browser: Authentication complete. Please close page return R. credentials cached locally PC form RDS files.","code":""},{"path":"/privacy_policy.html","id":"key-points","dir":"","previous_headings":"","what":"Key points","title":"NA","text":"default, gargle caches user tokens centrally, user level, keys labels also convey Google identity associated token. Token storage relies serialized R objects. , tokens stored locally PC form RDS files.","code":""},{"path":"/privacy_policy.html","id":"use-own-oauth-client","dir":"","previous_headings":"","what":"Use own OAuth client","title":"NA","text":"can use OAuth app:","code":"app <- httr::oauth_app(appname = \"app name\", key = \"app id\", secret = \"app secret\") ryt_auth_configure(app = app)  # or from json file  ryt_auth_configure(path = 'D:/ga_auth/app.json')  # run authorization ryt_auth('me@gmail.com')"},{"path":"/reference/reporting_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a list of report types that the channel or content owner can retrieve. Each item in the list contains an id property, which identifies the report's ID, and you need this value to schedule a reporting job. — ryt_get_report_types","title":"Returns a list of report types that the channel or content owner can retrieve. Each item in the list contains an id property, which identifies the report's ID, and you need this value to schedule a reporting job. — ryt_get_report_types","text":"creating reporting job, instructing YouTube generate report daily basis. report available within 24 hours time job created. resource response contains id property, specifies ID YouTube uses uniquely identify job. need ID retrieve list reports generated job delete job.","code":""},{"path":"/reference/reporting_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a list of report types that the channel or content owner can retrieve. Each item in the list contains an id property, which identifies the report's ID, and you need this value to schedule a reporting job. — ryt_get_report_types","text":"","code":"ryt_get_report_types()  ryt_create_job(   report_type = c(\"channel_annotations_a1\", \"channel_basic_a2\", \"channel_cards_a1\",     \"channel_combined_a2\", \"channel_demographics_a1\", \"channel_device_os_a2\",     \"channel_end_screens_a1\", \"channel_playback_location_a2\", \"channel_province_a2\",     \"channel_sharing_service_a1\", \"channel_playback_location_a2\", \"channel_province_a2\",     \"channel_sharing_service_a1\", \"channel_subtitles_a2\", \"channel_traffic_source_a2\",     \"playlist_basic_a1\", \"playlist_device_os_a1\", \"playlist_playback_location_a1\",     \"playlist_province_a1\", \"playlist_traffic_source_a1\") )  ryt_get_job_list()  ryt_get_report_list(   job_id,   created_after = NULL,   start_time_at_or_after = NULL,   start_time_before = NULL )  ryt_get_report(download_url)  ryt_get_report_metadata(job_id, report_id)  ryt_delete_job(job_id)"},{"path":"/reference/reporting_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a list of report types that the channel or content owner can retrieve. Each item in the list contains an id property, which identifies the report's ID, and you need this value to schedule a reporting job. — ryt_get_report_types","text":"report_type type report job creates. property value corresponds id reportType retrieved ryt_get_report_types function. job_id ID YouTube uses uniquely identify job deleted. Use ryt_get_job_list. created_after specified, parameter indicates API response contain reports created specified date time, including new reports backfilled data. Note value pertains time report created dates associated returned data. value timestamp RFC3339 UTC \"Zulu\" format, accurate microseconds. Example: \"2015-10-02T15:01:23.045678Z\". start_time_at_or_after parameter indicates API response contain reports earliest data report specified date. Whereas createdAfter parameter value pertains time report created, date pertains data report. value timestamp RFC3339 UTC \"Zulu\" format, accurate microseconds. Example: \"2015-10-02T15:01:23.045678Z\". start_time_before parameter indicates API response contain reports earliest data report specified date. Whereas createdAfter parameter value pertains time report created, date pertains data report. value timestamp RFC3339 UTC \"Zulu\" format, accurate microseconds. Example: \"2015-10-02T15:01:23.045678Z\". download_url download URL, can get ryt_get_report_list ryt_get_report_metadata report_id ID YouTube uses uniquely identify report retrieved. Use ryt_get_report_list","code":""},{"path":"/reference/reporting_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a list of report types that the channel or content owner can retrieve. Each item in the list contains an id property, which identifies the report's ID, and you need this value to schedule a reporting job. — ryt_get_report_types","text":"ryt_get_report_types: tibble report types ryt_reports_create_job: return value, called side effects ryt_get_job_list: tibble jobs metadata ryt_get_report_list: tibble reports metadata ryt_get_report: tibble report data ryt_get_report_metadata: list report metadata ryt_reports_delete_job: return value, called side effects","code":""},{"path":[]},{"path":"/reference/reporting_api.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns a list of report types that the channel or content owner can retrieve. Each item in the list contains an id property, which identifies the report's ID, and you need this value to schedule a reporting job. — ryt_get_report_types","text":"","code":"if (FALSE) {  # auth  ryt_auth('me@gmail.com')   # get reporting data  ## create job  ryt_reports_create_job('channel_basic_a2')   ## get job list  jobs <- ryt_get_job_list()   ## get job report list  reports <- ryt_get_report_list(    job_id = jobs$id[1],    created_after = '2021-10-20T15:01:23.045678Z'  )   ## get report data  data <- ryt_get_report(    download_url = reports$downloadUrl[1]  )   ## delete job  ryt_reports_delete_job(jobs$id[1])  }"},{"path":"/reference/rytstat-package.html","id":null,"dir":"Reference","previous_headings":"","what":"rytstat: Work with 'YouTube API' — rytstat-package","title":"rytstat: Work with 'YouTube API' — rytstat-package","text":"Provide function get data 'YouTube Data API' <https://developers.google.com/youtube/v3/docs/>, 'YouTube Analytics API' <https://developers.google.com/youtube/analytics/reference/> 'YouTube Reporting API' <https://developers.google.com/youtube/reporting/v1/reports>.","code":""},{"path":[]},{"path":[]},{"path":"/reference/rytstat-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rytstat: Work with 'YouTube API' — rytstat-package","text":"Maintainer: Alexey Seleznev selesnow@gmail.com (ORCID) contributors: Netpeak [copyright holder]","code":""},{"path":"/reference/ryt_auth.html","id":null,"dir":"Reference","previous_headings":"","what":"Authorization in YouTube API — ryt_auth","title":"Authorization in YouTube API — ryt_auth","text":"Authorize rytstat view manage YouTube Account. function wrapper around gargle::token_fetch(). default, directed web browser, asked sign Google account, grant rytstat permission operate behalf YouTube. default, permission, user credentials cached folder home directory, can automatically refreshed, necessary. Storage user level means token can used across multiple projects tokens less likely synced cloud accident. interacting R within browser (applies RStudio Server, RStudio Workbench, RStudio Cloud), need variant flow, known --band auth (\"oob\"). happen automatically, can request use_oob = TRUE , persistently, setting option via options(gargle_oob_default = TRUE).","code":""},{"path":"/reference/ryt_auth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Authorization in YouTube API — ryt_auth","text":"","code":"ryt_auth(   email = gargle::gargle_oauth_email(),   path = NULL,   cache = gargle::gargle_oauth_cache(),   use_oob = gargle::gargle_oob_default(),   token = NULL )"},{"path":"/reference/ryt_auth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Authorization in YouTube API — ryt_auth","text":"email Optional. Allows user target specific Google identity. path Path JSON file identifying service account cache Specifies OAuth token cache. use_oob Whether prefer \"band\" authentication. token token class Token2.0 object ","code":""},{"path":"/reference/ryt_auth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Authorization in YouTube API — ryt_auth","text":"Token2.0","code":""},{"path":"/reference/ryt_auth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Authorization in YouTube API — ryt_auth","text":"users, time, need call ryt_auth() explicitly -- triggered first action requires authorization. Even called, default arguments often suffice. However, necessary, function allows user explicitly: Declare Google identity use, via email address. multiple cached tokens, can clarify one use. can also force rytstat switch one identity another. cached token email, triggers return browser choose identity give consent. can specify just domain using glob pattern. means script containing email = \"*@example.com\" can run without tweaks machine either alice@example.com bob@example.com. Use service account token workload identity federation. Bring Token2.0. Specify non-default behavior re: token caching --bound authentication. Customize scopes. details many ways find token, see gargle::token_fetch(). deeper control auth, use ryt_auth_configure() bring OAuth app API key. Read gargle options, see gargle::gargle_options.","code":""},{"path":[]},{"path":"/reference/ryt_auth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Authorization in YouTube API — ryt_auth","text":"","code":"if (FALSE) { ## load/refresh existing credentials, if available ## otherwise, go to browser for authentication and authorization ryt_auth()  ## force use of a token associated with a specific email ryt_auth(email = \"yourname@example.com\")  ## force a menu where you can choose from existing tokens or ## choose to get a new one ryt_auth(email = NA)  ## ----------------------- ## use own OAuth client app ryt_auth_configure(     path = \"path/to/your/oauth_client.json\" )  ryt_auth(email = \"yourname@example.com\") }"},{"path":"/reference/ryt_auth_configure.html","id":null,"dir":"Reference","previous_headings":"","what":"Edit and view auth configuration — ryt_auth_configure","title":"Edit and view auth configuration — ryt_auth_configure","text":"functions give control visibility auth configuration ryt_auth() . ryt_auth_configure() lets user specify : OAuth app, used obtaining user token. API key. rytstat de-authorized via ryt_deauth(), requests sent API key lieu token. See vignette get API credentials . user configure settings, internal defaults used. ryt_oauth_app() ryt_api_key() retrieve currently configured OAuth app API key, respectively.","code":""},{"path":"/reference/ryt_auth_configure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Edit and view auth configuration — ryt_auth_configure","text":"","code":"ryt_auth_configure(app, path, api_key)  ryt_auth_cache_path()  ryt_open_auth_cache_folder()  ryt_api_key()  ryt_oauth_app()"},{"path":"/reference/ryt_auth_configure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Edit and view auth configuration — ryt_auth_configure","text":"app OAuth app, sense httr::oauth_app(). path JSON downloaded Google Cloud Platform Console, containing client id (aka key) secret, one forms supported txt argument jsonlite::fromJSON() (typically, file path JSON string). api_key API key.","code":""},{"path":"/reference/ryt_auth_configure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Edit and view auth configuration — ryt_auth_configure","text":"ryt_auth_configure(): object R6 class gargle::AuthState, invisibly. ryt_oauth_app(): current user-configured httr::oauth_app(). ryt_api_key(): current user-configured API key.","code":""},{"path":[]},{"path":"/reference/ryt_auth_configure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Edit and view auth configuration — ryt_auth_configure","text":"","code":"if (FALSE) { # see and store the current user-configured OAuth app (probaby `NULL`) (original_app <- ryt_oauth_app())  # see and store the current user-configured API key (probaby `NULL`) (original_api_key <- ryt_api_key())  if (require(httr)) {   # bring your own app via client id (aka key) and secret   google_app <- httr::oauth_app(     \"my-awesome-google-api-wrapping-package\",     key = \"YOUR_CLIENT_ID_GOES_HERE\",     secret = \"YOUR_SECRET_GOES_HERE\"   )   google_key <- \"YOUR_API_KEY\"   ryt_auth_configure(app = google_app, api_key = google_key)    # confirm the changes   ryt_oauth_app()   ryt_api_key()    # bring your own app via JSON downloaded from Google Developers Console   # this file has the same structure as the JSON from Google   ryt_auth_configure(path = app_path)    # confirm the changes   ryt_oauth_app()  }  # restore original auth config gs4_auth_configure(app = original_app, api_key = original_api_key) }"},{"path":"/reference/ryt_deauth.html","id":null,"dir":"Reference","previous_headings":"","what":"Suspend authorization — ryt_deauth","title":"Suspend authorization — ryt_deauth","text":"Put rytstat de-authorized state. Instead sending token, rytstat send API key. can used access public resources Google sign-required. handy using rytstat non-interactive setting make requests require token. prevent attempt obtain token interactively browser. user can configure API key via ryt_auth_configure() retrieve key via ryt_api_key(). absence user-configured key, built-default key used.","code":""},{"path":"/reference/ryt_deauth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suspend authorization — ryt_deauth","text":"","code":"ryt_deauth()"},{"path":"/reference/ryt_deauth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suspend authorization — ryt_deauth","text":"suspend authorization","code":""},{"path":[]},{"path":"/reference/ryt_get_analytics.html","id":null,"dir":"Reference","previous_headings":"","what":"Get statistics from 'YouTube Analytics API' — ryt_get_analytics","title":"Get statistics from 'YouTube Analytics API' — ryt_get_analytics","text":"YouTube Analytics API enables generate custom reports containing YouTube Analytics data. API supports reports channels content owners.","code":""},{"path":"/reference/ryt_get_analytics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get statistics from 'YouTube Analytics API' — ryt_get_analytics","text":"","code":"ryt_get_analytics(   start_date = Sys.Date() - 14,   end_date = Sys.Date(),   metrics = c(\"views\", \"estimatedMinutesWatched\", \"averageViewDuration\",     \"averageViewPercentage\", \"subscribersGained\"),   dimensions = \"day\",   filters = NULL )"},{"path":"/reference/ryt_get_analytics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get statistics from 'YouTube Analytics API' — ryt_get_analytics","text":"start_date start date fetching YouTube Analytics data. value YYYY-MM-DD format. end_date end date fetching YouTube Analytics data. value YYYY-MM-DD format. metrics Character vector YouTube Analytics metrics, views likes,dislikes. See documentation channel reports list reports can retrieve metrics available report. Metrics document contains definitions metrics. dimensions Character vector YouTube Analytics dimensions, video ageGroup,gender. Dimensions document contains definitions dimensions. filters Character vector filters applied retrieving YouTube Analytics data. documentation channel reports reports identifies dimensions can used filter report, Dimensions document defines dimensions.","code":""},{"path":"/reference/ryt_get_analytics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get statistics from 'YouTube Analytics API' — ryt_get_analytics","text":"tibble analytics data","code":""},{"path":"/reference/ryt_get_analytics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get statistics from 'YouTube Analytics API' — ryt_get_analytics","text":"","code":"if (FALSE) { # auth ryt_auth()  # get list of your videos videos <- ryt_get_videos()  # function for loading video stat get_videos_stat <- function(video_id) {    data <- ryt_get_analytics(     metrics = c('views', 'likes', 'dislikes', 'comments', 'shares'),     filters = stringr::str_glue('video=={video_id}')   )    if ( nrow(data) > 0 ) {     data <- mutate(data, video_id = video_id) } }  # load video stat video_stat <- purrr::map_df(videos$id_video_id, get_videos_stat)  # join stat with video metadata video_stat <- left_join(video_stat,                         videos,                         by = c(\"video_id\" = \"id_video_id\")) %>%               select(video_id,                      title,                      day,                      views,                      likes,                      dislikes,                      comments,                      shares) }"},{"path":"/reference/ryt_get_channels.html","id":null,"dir":"Reference","previous_headings":"","what":"Get channel info from 'YouTube API' — ryt_get_channels","title":"Get channel info from 'YouTube API' — ryt_get_channels","text":"Get channel info 'YouTube API'","code":""},{"path":"/reference/ryt_get_channels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get channel info from 'YouTube API' — ryt_get_channels","text":"","code":"ryt_get_channels(   fields = c(\"contentDetails\", \"id\", \"snippet\", \"statistics\", \"status\", \"topicDetails\") )"},{"path":"/reference/ryt_get_channels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get channel info from 'YouTube API' — ryt_get_channels","text":"fields Fields channel metadata, see API documentation.","code":""},{"path":"/reference/ryt_get_channels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get channel info from 'YouTube API' — ryt_get_channels","text":"tibble channel metadata","code":""},{"path":"/reference/ryt_get_channels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get channel info from 'YouTube API' — ryt_get_channels","text":"","code":"if (FALSE) { channels <- ryt_get_channels()  }"},{"path":"/reference/ryt_get_channel_activities.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a list of channel activity events — ryt_get_channel_activities","title":"Returns a list of channel activity events — ryt_get_channel_activities","text":"Returns list channel activity events","code":""},{"path":"/reference/ryt_get_channel_activities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a list of channel activity events — ryt_get_channel_activities","text":"","code":"ryt_get_channel_activities(fields = c(\"contentDetails\", \"id\", \"snippet\"))"},{"path":"/reference/ryt_get_channel_activities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a list of channel activity events — ryt_get_channel_activities","text":"fields Fields channel metadata, see API documentation.","code":""},{"path":"/reference/ryt_get_channel_activities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a list of channel activity events — ryt_get_channel_activities","text":"tibble channel activies","code":""},{"path":"/reference/ryt_get_channel_activities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns a list of channel activity events — ryt_get_channel_activities","text":"","code":"if (FALSE) {  channel_activities <- ryt_get_channel_activities()  }"},{"path":"/reference/ryt_get_comments.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a list of comment threads of video or channel — ryt_get_comments","title":"Returns a list of comment threads of video or channel — ryt_get_comments","text":"Returns list comment threads video channel","code":""},{"path":"/reference/ryt_get_comments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a list of comment threads of video or channel — ryt_get_comments","text":"","code":"ryt_get_comments(   video_id = NULL,   channel_id = NULL,   text_format = c(\"plainText\", \"html\") )"},{"path":"/reference/ryt_get_comments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a list of comment threads of video or channel — ryt_get_comments","text":"video_id YouTUbe Video ID channel_id YouTube Channel ID text_format Set parameter's value html plainText instruct API return comments left users html formatted plain text. default value plainText","code":""},{"path":"/reference/ryt_get_comments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a list of comment threads of video or channel — ryt_get_comments","text":"tibble comments","code":""},{"path":[]},{"path":"/reference/ryt_get_comments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns a list of comment threads of video or channel — ryt_get_comments","text":"","code":"if (FALSE) { # all comments comments <- ryt_get_comments()  # videos comments video_comments <- ryt_get_comments(video_id = 'fW7gGS^G78') }"},{"path":"/reference/ryt_get_playlists.html","id":null,"dir":"Reference","previous_headings":"","what":"Get playlist from 'YouTube API' — ryt_get_playlists","title":"Get playlist from 'YouTube API' — ryt_get_playlists","text":"Get playlist 'YouTube API'","code":""},{"path":"/reference/ryt_get_playlists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get playlist from 'YouTube API' — ryt_get_playlists","text":"","code":"ryt_get_playlists(   fields = c(\"contentDetails\", \"id\", \"localizations\", \"player\", \"snippet\", \"status\") )"},{"path":"/reference/ryt_get_playlists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get playlist from 'YouTube API' — ryt_get_playlists","text":"fields Fields playist metadata, see API documentation.","code":""},{"path":"/reference/ryt_get_playlists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get playlist from 'YouTube API' — ryt_get_playlists","text":"tibble playlist metadata","code":""},{"path":"/reference/ryt_get_playlist_items.html","id":null,"dir":"Reference","previous_headings":"","what":"Get playlist items data on 'YouTube' — ryt_get_playlist_items","title":"Get playlist items data on 'YouTube' — ryt_get_playlist_items","text":"Get playlist items data 'YouTube'","code":""},{"path":"/reference/ryt_get_playlist_items.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get playlist items data on 'YouTube' — ryt_get_playlist_items","text":"","code":"ryt_get_playlist_items(   playlist_id,   fields = c(\"contentDetails\", \"id\", \"snippet\", \"status\"),   cl = NULL )"},{"path":"/reference/ryt_get_playlist_items.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get playlist items data on 'YouTube' — ryt_get_playlist_items","text":"playlist_id Playlist ID, see ryt_get_playlists. fields Fields video metadata, see API documentation. cl cluster object created makeCluster, integer indicate number child-processes (integer values ignored Windows) parallel evaluations (see Details performance).","code":""},{"path":"/reference/ryt_get_playlist_items.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get playlist items data on 'YouTube' — ryt_get_playlist_items","text":"tibble playlist items details","code":""},{"path":"/reference/ryt_get_videos.html","id":null,"dir":"Reference","previous_headings":"","what":"Get list of your videos from 'YouTube' — ryt_get_videos","title":"Get list of your videos from 'YouTube' — ryt_get_videos","text":"Get list videos 'YouTube'","code":""},{"path":"/reference/ryt_get_videos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get list of your videos from 'YouTube' — ryt_get_videos","text":"","code":"ryt_get_videos()"},{"path":"/reference/ryt_get_videos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get list of your videos from 'YouTube' — ryt_get_videos","text":"tibble video list","code":""},{"path":"/reference/ryt_get_video_details.html","id":null,"dir":"Reference","previous_headings":"","what":"Get detail data of your videos on 'YouTube' — ryt_get_video_details","title":"Get detail data of your videos on 'YouTube' — ryt_get_video_details","text":"Get detail data videos 'YouTube'","code":""},{"path":"/reference/ryt_get_video_details.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get detail data of your videos on 'YouTube' — ryt_get_video_details","text":"","code":"ryt_get_video_details(   video_id,   fields = c(\"contentDetails\", \"fileDetails\", \"id\", \"liveStreamingDetails\",     \"localizations\", \"player\", \"processingDetails\", \"recordingDetails\", \"snippet\",     \"statistics\", \"status\", \"suggestions\", \"topicDetails\"),   cl = NULL )"},{"path":"/reference/ryt_get_video_details.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get detail data of your videos on 'YouTube' — ryt_get_video_details","text":"video_id Video ID, see ryt_get_videos. fields Fields video metadata, see API documentation. cl cluster object created makeCluster, integer indicate number child-processes (integer values ignored Windows) parallel evaluations (see Details performance).","code":""},{"path":"/reference/ryt_get_video_details.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get detail data of your videos on 'YouTube' — ryt_get_video_details","text":"tibble video details","code":""},{"path":"/reference/ryt_get_video_details.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get detail data of your videos on 'YouTube' — ryt_get_video_details","text":"","code":"if (FALSE) { # get all videos videos <- ryt_get_videos()  # get videos metadata videos_details <- ryt_get_video_details(     video_id = videos$id_video_id )  }"},{"path":"/reference/ryt_has_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Is there a token on hand? — ryt_has_token","title":"Is there a token on hand? — ryt_has_token","text":"Reports whether rytstat stored token, ready use downstream requests.","code":""},{"path":"/reference/ryt_has_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is there a token on hand? — ryt_has_token","text":"","code":"ryt_has_token()"},{"path":"/reference/ryt_has_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is there a token on hand? — ryt_has_token","text":"Logical.","code":""},{"path":[]},{"path":"/reference/ryt_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce configured token — ryt_token","title":"Produce configured token — ryt_token","text":"internal use programming around YouTube API. Returns token pre-processed httr::config(). users need handle tokens \"hand\" , even need control, ryt_auth() need. current token, ryt_auth() called either load cache initiate OAuth2.0 flow. auth deactivated via ryt_deauth(), ryt_token() returns NULL.","code":""},{"path":"/reference/ryt_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce configured token — ryt_token","text":"","code":"ryt_token()"},{"path":"/reference/ryt_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce configured token — ryt_token","text":"request object (S3 class provided httr).","code":""},{"path":[]},{"path":"/reference/ryt_user.html","id":null,"dir":"Reference","previous_headings":"","what":"Get info on current user — ryt_user","title":"Get info on current user — ryt_user","text":"Reveals email address user associated current token. token loaded yet, function initiate auth.","code":""},{"path":"/reference/ryt_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get info on current user — ryt_user","text":"","code":"ryt_user()"},{"path":"/reference/ryt_user.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get info on current user — ryt_user","text":"email address , token loaded, NULL.","code":""},{"path":[]},{"path":[]},{"path":"/news/index.html","id":"другое-development-version","dir":"Changelog","previous_headings":"","what":"Другое","title":"rytstat (development version)","text":"Вшитый в rytstat OAuth клиент был подтверждён Google, теперь все пользователи пакета могут использовать его для авторизациию","code":""},{"path":"/news/index.html","id":"rytstat-021","dir":"Changelog","previous_headings":"","what":"rytstat 0.2.1","title":"rytstat 0.2.1","text":"CRAN release: 2021-12-07","code":""},{"path":"/news/index.html","id":"документация-0-2-1","dir":"Changelog","previous_headings":"","what":"Документация","title":"rytstat 0.2.1","text":"Исправлены ссылки в README и DESCRIPTION","code":""},{"path":[]},{"path":"/news/index.html","id":"новые-функции-0-2-0","dir":"Changelog","previous_headings":"","what":"Новые функции","title":"rytstat 0.2.0","text":"Доработал функцию ryt_get_playlists() таким образом, что бы она разворачивала все вложенные столбцы. Добавлена функция ryt_get_playlist_items(), которая позволяет запросить элементы плейлиста YouTube. Добавлена функция ryt_get_channels(), которая позволяет получить метаданные по каналу. Добавдена функция ryt_get_channel_activities(), которая позволяет получить список активностей связанных с вашим каналом. Добавлена функция ryt_get_comments(), которая позволяет запросить список комментариев к видео или каналу.","code":""},{"path":"/news/index.html","id":"исправления-ошибок-0-2-0","dir":"Changelog","previous_headings":"","what":"Исправления ошибок","title":"rytstat 0.2.0","text":"Исправлено поведение функции ryt_get_analytics(), ранее нельзя было изменить параметр dimensions, он всегда при запросе был равен ‘day’.","code":""},{"path":"/news/index.html","id":"названия-функций-0-2-0","dir":"Changelog","previous_headings":"","what":"Названия функций","title":"rytstat 0.2.0","text":"ryt_reports_create_job() -> ryt_create_job() ryt_reports_get_job_list() -> ryt_get_job_list() ryt_reports_get_report_list() -> ryt_get_report_list() ryt_reports_delete_job() -> ryt_delete_job() ryt_get_video_list() -> ryt_get_videos()","code":""},{"path":"/news/index.html","id":"документация-0-2-0","dir":"Changelog","previous_headings":"","what":"Документация","title":"rytstat 0.2.0","text":"В документацию всех функций добавлены примеры кода. Создан официальный сайт пакета rytstat - https://selesnow.github.io/rytstat/docs","code":""},{"path":"/news/index.html","id":"прочее-0-2-0","dir":"Changelog","previous_headings":"","what":"Прочее","title":"rytstat 0.2.0","text":"Начиная с версии 0.2.0 пакет требует разрешение https://www.googleapis.com/auth/youtube.force-ssl, которое позволяет rytstat просматривать комментарии.","code":""},{"path":"/news/index.html","id":"rytstat-010","dir":"Changelog","previous_headings":"","what":"rytstat 0.1.0","title":"rytstat 0.1.0","text":"CRAN release: 2021-10-27 Добавлен NEWS.md для фиксации изменений в пакете. Пакет опубликован на CRAN.","code":""}]
